<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ Copyright Â© 2020 CloudBees, Inc.
  ~ This is proprietary code. All rights reserved.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.cloudbees.jenkins.plugins</groupId>
    <artifactId>jenkins-plugins</artifactId>
    <version>130</version>
    <relativePath />
  </parent>

  <artifactId>cloudbees-casc-client</artifactId>
  <version>1.59</version>
  <packaging>hpi</packaging>

  <name>CloudBees CasC Client Plugin</name>
  <url>https://docs.cloudbees.com/docs/release-notes/latest/plugins/${project.artifactId}-plugin</url>

  <properties>
    <node.version>12.18.3</node.version>
    <npm.version>6.14.6</npm.version>
    <frontend-version>1.10.0</frontend-version>
    <useBeta>true</useBeta> <!-- Jenkins.MANAGE is still Beta.class -->
    <no-test-jar>false</no-test-jar> <!-- to allow other plugins to extend abstract test classes like ProjectItem.java -->
    <jenkins.version>2.332.2-cb-1</jenkins.version> <!-- Forced by cloudbees-installation-manager:2.303.0.7 . TODO Remove after next URR BOM -->
  </properties>

  <scm>
    <connection>scm:git:ssh://git@github.com/cloudbees/${project.artifactId}-plugin.git</connection>
    <developerConnection>scm:git:ssh://git@github.com/cloudbees/${project.artifactId}-plugin.git</developerConnection>
    <tag>cloudbees-casc-client-1.59</tag>
  </scm>

  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>com.cloudbees</groupId>
        <artifactId>unified-release</artifactId>
        <version>${cb.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <dependency> <!-- TODO Remove when in URR BOM -->
        <groupId>com.cloudbees.jenkins.modules</groupId>
        <artifactId>cloudbees-installation-manager</artifactId>
        <version>2.332.0.6</version>
      </dependency>
      <dependency> <!-- TODO Remove when in URR BOM -->
        <groupId>com.cloudbees.jenkins.modules</groupId>
        <artifactId>cloudbees-installation-manager</artifactId>
        <version>2.332.0.6</version>
        <classifier>tests</classifier>
      </dependency>

      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest</artifactId>
        <version>2.2</version>
      </dependency>

      <dependency>
        <groupId>org.awaitility</groupId>
        <artifactId>awaitility</artifactId>
        <version>4.2.0</version>
      </dependency>

      <dependency>
        <groupId>io.jenkins.lib</groupId>
        <artifactId>support-log-formatter</artifactId>
        <version>1.1</version>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>3.12.0</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.kohsuke</groupId>
      <artifactId>access-modifier-suppressions</artifactId>
      <version>1.27</version>
    </dependency>

    <dependency>
      <groupId>com.cloudbees.jenkins.plugins</groupId>
      <artifactId>cloudbees-casc-items-api</artifactId>
    </dependency>

    <dependency>
      <groupId>com.cloudbees.jenkins.modules</groupId>
      <artifactId>cloudbees-installation-manager</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>io.jenkins.plugins</groupId>
      <artifactId>snakeyaml-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>cloudbees-folder</artifactId>
    </dependency>
    <dependency>
      <groupId>com.cloudbees.nectar.plugins</groupId>
      <artifactId>nectar-license</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>support-core</artifactId>
    </dependency>

    <dependency>
      <groupId>com.cloudbees.jenkins.plugins</groupId>
      <artifactId>cloudbees-analytics</artifactId>
    </dependency>

    <!-- Optional dependencies -->
    <dependency>
      <groupId>io.jenkins</groupId>
      <artifactId>configuration-as-code</artifactId>
      <optional>true</optional>
    </dependency>

    <!-- To pick this up: https://github.com/cloudbees/cloudbees-assurance-plugin/commit/78bfd4d91f9d29b8b166b4af3a2d2c7884776cda -->
    <dependency>
      <groupId>com.cloudbees.jenkins.plugins</groupId>
      <artifactId>cloudbees-assurance</artifactId>
      <!--
        Why is this optional?
        Well, it is not really optional, it is required. However modules depending on this one do not necessarily require it as transitive.
        Actually they should not have it unless they really depend on it, the only way to achieve that is by making it
        optional. This has other implications in the Jenkins Plugins world, however cloudbees-assurance is in scope
        bootstrap in all CB products, so it granted to be installed in all supported versions, so this "optional" configuration
        will not affect any runtime behaviour, it is merely needed for the build and test process.
      -->
      <optional>true</optional>
      <exclusions>
        <exclusion>
          <groupId>com.google.code.findbugs</groupId>
          <artifactId>annotations</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Test -->
    <dependency>
      <groupId>com.cloudbees.jenkins.plugins</groupId>
      <artifactId>cloudbees-analytics</artifactId>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.cloudbees.jenkins.plugins</groupId>
      <artifactId>cloudbees-casc-items-commons</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>matrix-auth</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.cloudbees.jenkins.modules</groupId>
      <artifactId>cloudbees-installation-manager</artifactId>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.cloudbees.beekeeper</groupId>
      <artifactId>envelope-data</artifactId>
      <version>2.0.12</version>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>

    <!-- Test dependencies for Item Creation -->
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>matrix-project</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.jenkins-ci.tools</groupId>
        <artifactId>maven-hpi-plugin</artifactId>
        <configuration>
          <loggers>
            <com.cloudbees.jenkins.plugins.casc>FINEST</com.cloudbees.jenkins.plugins.casc>
          </loggers>
          <minimumJavaVersion>8</minimumJavaVersion>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>3.1.2</version>
          <dependencies>
            <dependency>
              <groupId>com.cloudbees.devoptics</groupId>
              <artifactId>devoptics-checkstyle</artifactId>
              <version>1.22</version>
            </dependency>
            <dependency>
              <groupId>com.cloudbees</groupId>
              <artifactId>astro-checkstyle</artifactId>
              <version>1.0.0</version>
            </dependency>
          </dependencies>
          <configuration>
            <configLocation>devoptics/checkstyle.xml</configLocation>
            <headerLocation>devoptics/LICENSE.txt</headerLocation>
            <violationSeverity>warning</violationSeverity>
            <failOnViolation>false</failOnViolation>
            <failsOnError>true</failsOnError>

            <!-- default suppressions are defined in astro-checkstyle. You can apply local suppressions for your module
            by putting the following file in the root directory of your module -->
            <suppressionsLocation>checkstyle/suppressions.xml</suppressionsLocation>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
